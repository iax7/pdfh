#!/usr/bin/env ruby
# frozen_string_literal: true

require "optparse"
require "pdfh"
require "pdfh/version"
require "pdfh/utils"

options = {}
opt = OptionParser.new do |opts|
  # Process ARGV
  opts.banner = "Usage: #{opts.program_name} [options]"
  opts.on("-v", "--verbose", "Show more output, useful for debug") { |o| options[:verbose] = o }
  opts.on("-d", "--dry", "Dry run, does not write new pdf") { |o| options[:dry] = o }
  opts.on_tail("-V", "--version", "Show version") do
    puts "#{opts.program_name} v#{Pdfh::VERSION}"
    exit
  end
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end

begin
  opt.parse!
rescue OptionParser::InvalidOption => e
  Pdfh.print_error e, exit_app: false
  puts opt
  exit 1
end

def validate_installed(app)
  require "open3"
  _stdout, _stderr, status = Open3.capture3("command -v #{app}")
  puts "Missing #{app} command." unless status.success?

  status.success?
end

exit(1) unless validate_installed("qpdf") && validate_installed("pdftotext")

Pdfh.main(options)
